// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/openshift-knative/knative-eventing-operator/pkg/apis/eventing/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// KnativeEventingLister helps list KnativeEventings.
type KnativeEventingLister interface {
	// List lists all KnativeEventings in the indexer.
	List(selector labels.Selector) (ret []*v1alpha1.KnativeEventing, err error)
	// KnativeEventings returns an object that can list and get KnativeEventings.
	KnativeEventings(namespace string) KnativeEventingNamespaceLister
	KnativeEventingListerExpansion
}

// knativeEventingLister implements the KnativeEventingLister interface.
type knativeEventingLister struct {
	indexer cache.Indexer
}

// NewKnativeEventingLister returns a new KnativeEventingLister.
func NewKnativeEventingLister(indexer cache.Indexer) KnativeEventingLister {
	return &knativeEventingLister{indexer: indexer}
}

// List lists all KnativeEventings in the indexer.
func (s *knativeEventingLister) List(selector labels.Selector) (ret []*v1alpha1.KnativeEventing, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.KnativeEventing))
	})
	return ret, err
}

// KnativeEventings returns an object that can list and get KnativeEventings.
func (s *knativeEventingLister) KnativeEventings(namespace string) KnativeEventingNamespaceLister {
	return knativeEventingNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// KnativeEventingNamespaceLister helps list and get KnativeEventings.
type KnativeEventingNamespaceLister interface {
	// List lists all KnativeEventings in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1alpha1.KnativeEventing, err error)
	// Get retrieves the KnativeEventing from the indexer for a given namespace and name.
	Get(name string) (*v1alpha1.KnativeEventing, error)
	KnativeEventingNamespaceListerExpansion
}

// knativeEventingNamespaceLister implements the KnativeEventingNamespaceLister
// interface.
type knativeEventingNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all KnativeEventings in the indexer for a given namespace.
func (s knativeEventingNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.KnativeEventing, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.KnativeEventing))
	})
	return ret, err
}

// Get retrieves the KnativeEventing from the indexer for a given namespace and name.
func (s knativeEventingNamespaceLister) Get(name string) (*v1alpha1.KnativeEventing, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("knativeeventing"), name)
	}
	return obj.(*v1alpha1.KnativeEventing), nil
}
